{
	// Place your CP workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"BaseTemplate": {
		"body": [
			"// Author: DCSekhara",
			"// Date: $CURRENT_YEAR-$CURRENT_MONTH-${CURRENT_DATE}",
			"// Time: $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND.000-05:00",
			"",
			"",
			"// Task: $TM_FILENAME",
			"// Question: $RELATIVE_FILEPATH",
			"",
			"",
			"#include <iostream>",
			"#include <vector>",
			"#include <set>",
			"#include <stack>",
			"#include <queue>",
			"#include <deque>",
			"#include <unordered_set>",
			"#include <unordered_map>",
			"#include <map>",
			"#include <bitset>",
			"#include <algorithm>",
			"#include <assert.h>",
			"using namespace std;",
			"typedef long long ll;",
			"",
			"#define endl '\\n'",
			"#define fi first",
			"#define sec second",
			"#define pb push_back",
			"#define fio                           \\",
			"    ios_base::sync_with_stdio(false); \\",
			"    cin.tie(NULL);                    \\",
			"    cout.tie(NULL);",
			"#define sz(x) (int)x.size()",
			"",
			"void solve()",
			"{",
			"    fio;",
			"    $0",
			"}",
			"int main()",
			"{",
			"    fio;",
			"    int test;",
			"    cin>>test;",
			"    // test = 1;",
			"    for (int i = 1; i <= test; i++)",
			"    {",
			"        solve();",
			"    }",
			"    return 0;",
			"}"
		  ],
		"scope": "cpp",
		"prefix": "templ-base",
		"description": "Creates a basic Template for C++"
	}	

}